// static char	**treat_tr1(char *command)
// {
// 	int		first_quote;
// 	int		last_quote;
// 	char	**command_splited;
// 	int		i;

// 	if (!command)
// 		return (NULL);
// 	first_quote = ft_first_ocurrence(command, '\'');
// 	last_quote = ft_last_ocurrence(command, '\'');
// 	i = 0;
// 	while (i <= (int) sizeof(command) + 1)
// 	{
// 		if (i >= first_quote && i <= last_quote)
// 		{
// 			if (command[i] == ' ')
// 				command[i] = '*';
// 		}
// 		i++;
// 	}
// 	command_splited = ft_split(command, ' ');
// 	command_splited = ft_replace_all_matrix(command_splited,
// 			"'", "");
// 	command_splited = ft_replace_all_matrix(command_splited,
// 			"*", " ");
// 	return (command_splited);
// }

// static char	**change_return_if_cmd_not_exist(t_ms *ms,
// 			char **command_splited)
// {
// 	if (ms->p.cmd_and_path == NULL)
// 	{
// 		ft_free_matrix((void **) command_splited);
// 		return (NULL);
// 	}
// 	else
// 		return (command_splited);
// }

	//check_if_command_is_empty(command, ms, tmp_fd);
	// if (ft_strnstr(command, "tr", sizeof(command)) != NULL)
	// 	command_splited = treat_tr1(command);
	// else
	// 	command_splited = ft_split(command, ' ');
	//command_splited = ft_replace_all_matrix(command_splited,
			// "'", "");
	//ms->command_being_executed_now = command_splited[0];
	//if (!command_splited)
		//return (NULL);
	//if (ms->cmd_and_path)
		//ft_free_ptr((void *) &ms->cmd_and_path);
	//curr_cmd->cmd_splited = ft_split(ms->p->line, ' ');

//if ((ms->p.cmds_size - 1) == curr_cmd->index)
		//	dup2(ms->p.out_fd, 1);

		//int		i;
	//i = 0;
		//ft_printf("#%d#\n", ms->p.cmds_size);
		//if (is_builtin(curr_cmd->name) == 1)
		//	execute_builtin(ms);
		//else
		//{

						// fprintf(tmp_fd);
